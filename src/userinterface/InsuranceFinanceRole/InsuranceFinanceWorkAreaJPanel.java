/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InsuranceFinanceRole;

import Business.Enterprise.Enterprise;
import Business.Organization.InsuranceFinanceOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.InsuranceWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author bhavana0414
 */
public class InsuranceFinanceWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel jPanel;
    
    private UserAccount usrAcnt;
    private InsuranceFinanceOrganization insrFincOrg;
    private Enterprise entrpz;

    /**
     * Creates new form InsuranceFinanceWorkAreaJPanel
     */
    public InsuranceFinanceWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, InsuranceFinanceOrganization insuranceFinanceOrganization, Enterprise enterprise) {
        initComponents();
        this.jPanel = userProcessContainer;
        this.usrAcnt = account;
        this.insrFincOrg = insuranceFinanceOrganization;
        this.entrpz = enterprise;
        pplTabl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        financJTable = new javax.swing.JTable();
        asgnToMeBtn = new javax.swing.JButton();
        prcsBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Insurance Finance Work Area");

        financJTable.setBackground(new java.awt.Color(204, 204, 204));
        financJTable.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        financJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Policy Number", "Policy Name", "Coverage%", "Claim Amount", "Bill Amount", "Insurance Claim Status", "Requesting HealthCenter ", "Finance Manager"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(financJTable);

        asgnToMeBtn.setBackground(new java.awt.Color(0, 0, 0));
        asgnToMeBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        asgnToMeBtn.setForeground(new java.awt.Color(255, 255, 255));
        asgnToMeBtn.setText("Assign To Me");
        asgnToMeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asgnToMeBtnActionPerformed(evt);
            }
        });

        prcsBtn.setBackground(new java.awt.Color(0, 0, 0));
        prcsBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        prcsBtn.setForeground(new java.awt.Color(255, 255, 255));
        prcsBtn.setText("Process Request");
        prcsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prcsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(324, 324, 324)
                        .addComponent(asgnToMeBtn)
                        .addGap(57, 57, 57)
                        .addComponent(prcsBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1085, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(asgnToMeBtn)
                    .addComponent(prcsBtn))
                .addContainerGap(735, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void asgnToMeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asgnToMeBtnActionPerformed
        int selectedRow = financJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to view details");
            return;
        } else {
            WorkRequest req = (InsuranceWorkRequest) financJTable.getValueAt(selectedRow, 0);
            if (req.getStatus().equals("Sent To Finance Department")) {
                req.setReceiver(usrAcnt);
                req.setStatus("Pending on " + req.getReceiver().getEmp().getEmployeeName());
                pplTabl();
                JOptionPane.showMessageDialog(null, "Request is assigned successfully to you");
            } else {
                JOptionPane.showMessageDialog(null, "Can't assign this work request, as the work request is in " + req.getStatus() + " status", "Warning!", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_asgnToMeBtnActionPerformed

    private void prcsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prcsBtnActionPerformed
        // TODO add your handling code here:
        int selRow = financJTable.getSelectedRow();
        if (selRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to view details");
            return;
        } else {

            InsuranceWorkRequest insrWrReq = (InsuranceWorkRequest) financJTable.getValueAt(selRow, 0);
            if (insrWrReq.getStatus().equalsIgnoreCase("Sent To Finance Department")) {
                JOptionPane.showMessageDialog(null, "Assign the request first");
                return;
            }
            if (insrWrReq.getStatus().equalsIgnoreCase("Insurance Claim Approved")) {
                JOptionPane.showMessageDialog(null, "Request already Completed", "Warning!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (!usrAcnt.equals(insrWrReq.getReceiver())) {
                JOptionPane.showMessageDialog(null, "Not Authorized", "Warning!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (!usrAcnt.getEmp().equals(insrWrReq.getReceiver().getEmp())) {
                JOptionPane.showMessageDialog(null, "Request assigned to other Officer", "Warning!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (insrWrReq.getStatus().equals("Insurance Claim Rejected")) {
                JOptionPane.showMessageDialog(null, "Cannot process a Rejected Request", "Warning!", JOptionPane.WARNING_MESSAGE);
                return;
            } else {

                InsuranceFinanceProcessRequest panel = new InsuranceFinanceProcessRequest(jPanel, usrAcnt, insrWrReq, entrpz);
                jPanel.add("OfficerProcessWorkRequestJPanel", panel);
                CardLayout layout = (CardLayout) jPanel.getLayout();
                layout.next(jPanel);

            }
        }
    }//GEN-LAST:event_prcsBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton asgnToMeBtn;
    private javax.swing.JTable financJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton prcsBtn;
    // End of variables declaration//GEN-END:variables

    public void pplTabl() {

        DefaultTableModel model = (DefaultTableModel) financJTable.getModel();
        model.setRowCount(0);

        for (WorkRequest workRequest : insrFincOrg.getWrkQ().getWorkRequests()) {
            InsuranceWorkRequest insrWkReq = ((InsuranceWorkRequest) workRequest);
            Object[] row = new Object[8];
            row[0] = insrWkReq;
            row[1] = insrWkReq.getPlcyNm();
            row[2] = insrWkReq.getInsCust().getIns().getCvrg();
            row[3] = insrWkReq.getClaimAmt();
            row[4] = insrWkReq.getBillAmt();
            row[5] = insrWkReq.getStatus();
            row[6] = insrWkReq.getInsCmpny();
            row[7] = insrWkReq.getReceiver() == null ? "" : insrWkReq.getReceiver().getEmp().getEmployeeName();

            model.addRow(row);
        }
        
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        financJTable.setRowSorter(sorter);
    }

}
